version: 2.1

orbs:
  silta: silta/silta@dev:master

executors:
  cicd73:
    docker:
      - image: wunderio/silta-cicd:circleci-php7.3-node12-composer1-v1
  cicd74:
    docker:
      - image: wunderio/silta-cicd:circleci-php7.4-node14-composer1-v1
  cicd80:
    docker:
      - image: wunderio/silta-cicd:circleci-php8.0-node14-composer2-v1
  cicd80v1:
    docker:
      - image: wunderio/silta-cicd:circleci-php8.0-node14-composer2-v1
  cicd82:
    docker:
      - image: wunderio/silta-cicd:circleci-php8.2-node20-composer2-v1

jobs:
  site-test:
    docker:
      - image: alpine/curl
    resource_class: small
    steps:
      - site-query:
          site_url: https://master.drupal-project-k8s.dev.wdr.io/_ping.php
      - site-query:
          site_url: https://master.drupal-project-k8s.silta-aks.wdr.io/_ping.php

commands:
  site-query:
    parameters:
      site_url:
        type: string
    steps:
      - run:
          name: Validate site url <<parameters.site_url>>
          command: |
            curl -u $SITE_TEST_BAUTH <<parameters.site_url>>

# Variables

filter_feature_only: &filter_feature_only
  branches:
    ignore:
      - production
      - master
      - &test_cluster /feature\/test-cluster(\/.*)?/
      - &aws_cluster /feature\/aws-cluster(\/.*)?/
      - &aks_cluster /feature\/aks-cluster(\/.*)?/

filter_test_cluster_only: &filter_test_cluster_only
  branches:
    only:
      - *test_cluster

filter_aws_cluster_only: &filter_aws_cluster_only
  branches:
    only:
      - *aws_cluster

filter_aks_cluster_only: &filter_aks_cluster_only
  branches:
    only:
      - *aks_cluster

filter_master_only: &filter_master_only
  branches:
    only:
      - master

filter_production_only: &filter_production_only
  branches:
    only:
      - production

workflows:
  version: 2
  commit:
    jobs:
      - approval:
          type: approval
          name: approve-deployment
          filters: *filter_feature_only

      - silta/drupal-validate: &drupal-validate
          name: validate

          # Use custom executor.
          executor: cicd82

          post-validation:
            - run:
                name: Helm unit tests
                command: |
                  helm unittest ./charts/silta-release --helm3
                  helm unittest ./charts/drupal --helm3

      # Build job for feature environments.
      # Other jobs defined below extend this job.
      - silta/drupal-build: &build
          name: build

          # Use custom executor.
          executor: cicd82

          codebase-build:
            # - run:
            #     name: Download feature branch build of silta cli
            #     command: |
            #       curl -sL https://github.com/wunderio/silta-cli/releases/download/test/silta-test-linux-amd64.tar.gz | tar xz -C ~/.local/bin
            - silta/drupal-composer-install
            - silta/npm-install-build
          context: silta_dev
          requires:
            - approve-deployment
          filters: *filter_feature_only

      # Deploy job for feature environments.
      # Other jobs defined below extend this job.
      - silta/drupal-deploy: &deploy
          name: deploy

          # Use custom executor.
          executor: cicd82

          # Use a local chart during development.
          chart_name: "./charts/drupal"
          chart_repository: ""
          pre-release:
            - run:
                name: Add helm repositories and build local chart
                command: |
                  helm repo add elastic https://helm.elastic.co
                  helm repo add codecentric https://codecentric.github.io/helm-charts
                  helm repo add percona https://percona.github.io/percona-helm-charts/
                  helm dependency build ./charts/drupal
            - run:
                name: Dry-run helm install
                command: helm install --dry-run --generate-name ./charts/drupal --values charts/drupal/test.values.yaml
          silta_config: silta/silta.yml
          context: silta_dev
          requires:
            - build
          filters: *filter_feature_only

      # Build job for test cluster.
      # Extends the job defined for feature environments.
      - silta/drupal-build:
          <<: *build
          name: build-test
          context: silta_test
          requires: [ ]
          filters: *filter_test_cluster_only

      # Deploy job for test cluster.
      # Extends the job defined for feature environments.
      - silta/drupal-deploy:
          <<: *deploy
          name: deploy-test
          silta_config: silta/silta.yml,silta/silta-test.yml
          context: silta_test
          requires:
            - build-test
          filters: *filter_test_cluster_only

      # Build job for master environment.
      # Extends the job defined for feature environments.
      - silta/drupal-build: &build-master
          <<: *build
          name: build-master
          requires: [ ]
          filters: *filter_master_only

      # Deploy job for master environment.
      # Extends the job defined for feature environments.
      - silta/drupal-deploy: &deploy-master
          <<: *deploy
          name: deploy-master
          silta_config: silta/silta.yml,silta/silta-master.yml
          requires:
            - build-master
          filters: *filter_master_only

      # Build job for master environment in AKS cluster.
      # Extends the job defined for master environments.
      - silta/drupal-build: &build-master-aks
          <<: *build-master
          name: build-aks-master
          context: silta_aks

      # Deploy job for master environment in AKS cluster.
      # Extends the job defined for master environments.
      - silta/drupal-deploy: &deploy-master-aks
          <<: *deploy-master
          name: "Deploy master to AKS cluster"
          silta_config: silta/silta.yml,silta/silta-master-aks.yml
          context: silta_aks
          requires:
            - build-aks-master

      # Build job for AKS cluster.
      # Extends the job defined for master environments.
      - silta/drupal-build:
          <<: *build-master
          name: build-aks
          context: silta_aks
          filters: *filter_aks_cluster_only

      # Deploy job for AKS cluster.
      # Extends the job defined for feature environments.
      - silta/drupal-deploy:
          <<: *deploy
          name: deploy-aks
          silta_config: silta/silta.yml,silta/silta-aks.yml
          context: silta_aks
          requires:
            - build-aks
          filters: *filter_aks_cluster_only

      # Build job for AWS cluster.
      # Extends the job defined for master environments.
      - silta/drupal-build:
          <<: *build-master
          name: build-aws
          context: silta_aws
          filters: *filter_aws_cluster_only

      # Deploy job for AWS cluster.
      # Extends the job defined for feature environments.
      - silta/drupal-deploy:
          <<: *deploy
          name: deploy-aws
          silta_config: silta/silta.yml,silta/silta-aws.yml
          context: silta_aws
          requires:
            - build-aws
          filters: *filter_aws_cluster_only

      # Build job for production environment.
      # Extends the job defined for master environments.
      - silta/drupal-build:
          <<: *build-master
          name: build-deploy-prod
          context: silta_finland
          filters: *filter_production_only

      # Deploy job for production environment.
      # Extends the job defined for feature environments.
      - silta/drupal-deploy:
          <<: *deploy
          name: build-deploy-prod
          silta_config: silta/silta.yml,silta/silta-prod.yml,silta/secrets_prod_signalsciences
          decrypt_files: silta/secrets_prod_signalsciences
          context: silta_finland
          requires:
            - build-deploy-prod
          filters: *filter_production_only

      # Test site availability by requesting _ping.php.
      - site-test: &site-test
          name: "Site test"
          requires:
            - "deploy-master"
            - "Deploy master to AKS cluster"
          filters: *filter_master_only

  # Weekly build and deploy master and master-aks environments.
  weekly-build:
    triggers:
      - schedule:
          cron: "0 8 * * 5"
          filters: *filter_master_only
    jobs:
      - silta/drupal-validate:
          <<: *drupal-validate

      - silta/drupal-build:
          <<: *build-master

      - silta/drupal-deploy:
          <<: *deploy-master

      - silta/drupal-build:
          <<: *build-master-aks

      - silta/drupal-deploy:
          <<: *deploy-master-aks

      - site-test:
          <<: *site-test
