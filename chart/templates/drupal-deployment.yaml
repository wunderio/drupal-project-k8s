apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "drupal.release_labels" . | nindent 6 }}
      deployment: drupal
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "drupal.release_labels" . | nindent 8 }}
        deployment: drupal
    spec:
      containers:
      # php-fpm container.
      - name: php
        {{- include "drupal.php-container" . | nindent 8}}
        volumeMounts:
          {{- include "drupal.volumeMounts" . | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: 9000
        readinessProbe:
          exec:
            # Prevent coming in during the installation process.
            command: ['/bin/bash', '-c', 'if [ {{ include "drupal.installation-in-progress-test" . }} ]; then exit 1; fi']
        resources:
          {{- .Values.php.resources | toYaml | nindent 10 }}

      # Nginx container
      - name: nginx
        image: {{ .Values.nginx.image | quote }}
        env:
        ports:
        - containerPort: 80
          name: drupal
        volumeMounts:
        {{- range $index, $mount := $.Values.mounts }}
        {{- if eq $mount.enabled true }}
        - name: drupal-{{ $index }}
          mountPath: {{ $mount.mountPath }}
          readOnly: true
        {{- end }}
        {{- end }}
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf # mount nginx-conf configmap volume to /etc/nginx
          readOnly: true
          subPath: nginx_conf
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d/drupal.conf # mount nginx-conf configmap volume to /etc/nginx
          readOnly: true
          subPath: drupal_conf
        {{- if .Values.nginx.extraConfig }}
        - name: nginx-extra-conf
          # provide empty configuration file in /etc/nginx/conf.d for users to populate
          mountPath: /etc/nginx/conf.d/misc.conf
          readOnly: true
          subPath: 'misc.conf'
        {{- end }}  
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          mountPath: /etc/nginx/.htaccess
          readOnly: true
          subPath: .htaccess
        {{- end }}
        livenessProbe:
          tcpSocket:
            port: 80
        resources:
          {{- .Values.nginx.resources | toYaml | nindent 10 }}

      volumes:
        {{- include "drupal.volumes" . | nindent 8}}
        - name: nginx-conf
          configMap:
            name: {{ .Release.Name }}-nginx-conf
            items:
              - key: nginx_conf
                path: nginx_conf
              - key: drupal_conf
                path: drupal_conf
        {{- if .Values.nginx.extraConfig }}
        - name: nginx-extra-conf
          configMap:
            name: {{ .Release.Name }}-nginx-extra-conf
            items:
            - key: config
              path: misc.conf
        {{- end }}
        {{- if .Values.nginx.basicauth.enabled }}
        - name: nginx-basicauth
          secret:
            secretName: {{ .Release.Name }}-secrets-drupal
            items:
              - key: .htaccess
                path: .htaccess
        {{- end }}
      {{- include "drupal.imagePullSecrets" . | nindent 6 }}
---
{{- if .Values.autoscaling.enabled }}
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ .Release.Name }}-drupal
  minReplicas: {{ .Values.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.autoscaling.maxReplicas }}
  metrics:
    {{- toYaml .Values.autoscaling.metrics | nindent 4 }}
{{- end }}
