apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    app: drupal
    release: {{ .Release.Name }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  {{ .Release.Name }}-drupal
      host: {{ template "drupal.domain" . }}
      prefix: /
      service: {{ .Release.Name }}-drupal.{{ .Release.Namespace }}.svc.cluster.local:80
spec:
  type: NodePort
  ports:
    - port: 80
  selector:
    app: drupal
    release: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-drupal
  labels:
    app: drupal
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: drupal
      release: {{ .Release.Name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: drupal
        release: {{ .Release.Name }}
    spec:
      containers:
      - image: {{ .Values.nginx.image | quote }}
        name: nginx
        resources:
          requests:
            cpu: "50m"
        livenessProbe:
          httpGet:
            path: /robots.txt
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 5
        env:
        - name: NGINX_STATIC_CONTENT_OPEN_FILE_CACHE
          value: "off"
        - name: NGINX_ERROR_LOG_LEVEL
          value: debug
        - name: NGINX_BACKEND_HOST
          value: localhost
        - name: NGINX_SERVER_ROOT
          value: /var/www/html/web
        ports:
        - containerPort: 80
          name: drupal
        volumeMounts:
        - name: drupal-public-files
          mountPath: /var/www/html/web/sites/default/files

      - image: {{ .Values.drupal.image | quote }}
        name: drupal
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - drush status --field 'Drupal bootstrap'
          initialDelaySeconds: 250
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_ping.php
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 10
        env:
        - name: DB_USER
          value: "{{ .Values.mariadb.db.user }}"
        - name: DB_NAME
          value: "{{ .Values.mariadb.db.name }}"
        - name: DB_HOST
          value: {{ .Release.Name }}-mariadb
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-mariadb
              key: mariadb-password
        - name: HASH_SALT
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-secrets-drupal
              key: hashsalt

        {{- if .Values.drupal.privateFiles.enabled }}
        - name: PRIVATE_FILES_PATH
          value: '/var/www/html/private'
        {{- end }}

      {{- range $key, $val := .Values.drupal.env }}
        - name: {{ $key }}
          value: {{ $val | quote }}
      {{- end }} 
        ports:
        - containerPort: 9000
          name: drupal
        volumeMounts:
        - name: drupal-public-files
          mountPath: /var/www/html/web/sites/default/files
        {{- if .Values.drupal.privateFiles.enabled }}
        - name: drupal-private-files
          mountPath: /var/www/html/private
        {{- end }}
      imagePullSecrets:
      - name: gcr
      volumes:
      - name: drupal-public-files
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-public-files
      {{- if .Values.drupal.privateFiles.enabled }}
      - name: drupal-private-files
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-private-files
      {{- end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-secrets-drupal
  labels:
    release: "{{ .Release.Name }}"
type: Opaque
data:
  {{- if .Values.drupal.hashsalt }}
  hashsalt: "{{ .Values.drupal.hashsalt | b64enc }}"
  {{ else }}
  hashsalt: {{ "{{ randAlphaNum 10 }}" | b64enc }}
  {{- end }}