suite: drupal deployment
templates:
  - drupal-deployment.yaml
tests:
  - it: is a deployment with default values
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: metadata.labels.app
          value: drupal

  - it: uses the right docker images
    set:
      php.image: 'drupal-12345'
      nginx.image: 'nginx-12345'
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: 'drupal-12345'
      - equal:
          path: spec.template.spec.containers[1].image
          value: 'nginx-12345'

  - it: sets environment variables correctly
    set:
      php.env:
        foo: bar
      environmentName: baz
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: foo
            value: bar
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SILTA_CLUSTER
            value: '1'
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: ENVIRONMENT_NAME
            value: baz

  - it: sets smtp environment variables correctly
    set:
      mailhog:
        enabled: false
      smtp:
        enabled: true
        address: examplehost
        username: foo
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SMTP_ADDRESS
            value: examplehost
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SMTP_USERNAME
            value: foo
  - it: sets mailhog smtp environment variables correctly
    set:
      mailhog:
        enabled: true
      smtp:
        enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SMTP_ADDRESS
            value: RELEASE-NAME-mailhog:1025
  - it: sets ssmtp environment variables correctly
    set:
      mailhog:
        enabled: false
      smtp:
        enabled: true
        address: examplehost
        username: foo
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SSMTP_MAILHUB
            value: examplehost
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: SSMTP_AUTHUSER
            value: foo

  - it: sets the replica count correctly
    set:
      replicas: 3
    asserts:
      - equal:
          path: spec.replicas
          value: 3

  - it: takes resource requests and limits
    set:
      php.resources:
        requests:
          cpu: 123m
          memory: 1G
        limits:
          cpu: 234m
          memory: 2G
      nginx.resources:
        requests:
          cpu: 123m
          memory: 1G
        limits:
          cpu: 234m
          memory: 2G
    asserts:
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: 123m
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: 1G
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[0].resources.limits.memory
          value: 2G

      - equal:
          path: spec.template.spec.containers[1].resources.requests.cpu
          value: 123m
      - equal:
          path: spec.template.spec.containers[1].resources.requests.memory
          value: 1G
      - equal:
          path: spec.template.spec.containers[1].resources.limits.cpu
          value: 234m
      - equal:
          path: spec.template.spec.containers[1].resources.limits.memory
          value: 2G
 
  - it: sets varnish environment variables if varnish is enabled
    set:
      varnish.enabled: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_ADMIN_HOST
            value: RELEASE-NAME-varnish
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_ADMIN_PORT
            value: "6082"
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_CONTROL_KEY
            valueFrom:
              secretKeyRef:
                key: control_key
                name: RELEASE-NAME-secrets-varnish
  
  - it: does not have varnish environment variables if varnish is disabled
    set:
      varnish.enabled: false
    asserts:
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_ADMIN_HOST
            value: RELEASE-NAME-varnish
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_ADMIN_PORT
            value: "6082"
      - notContains:
          path: spec.template.spec.containers[0].env
          content:
            name: VARNISH_CONTROL_KEY
            valueFrom:
              secretKeyRef:
                key: control_key
                name: RELEASE-NAME-secrets-varnish
