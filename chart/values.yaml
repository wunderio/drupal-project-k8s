
# Main domain of the cluster.
# If using ambassador, subdomains of this domain will be created automatically for each environment.
clusterDomain: "silta.wdr.io"

# An optional human-readable label for the environment, defaults to the release name.
# We typically pass the branch name when we build dedicated environments per branch.
# This name is mainly used to create nice subdomains for each environment.
environmentName: ""

# Configure image pull secrets for the containers. This is not needed on GKE.
# See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# The app label added to our Kubernetes resources.
app: drupal

# How many instances of the Drupal pod should be in our Kubernetes deployment.
# A single pod (the default value) is good for development environments to minimise resource usage.
# Multiple pods make sense for high availability.
replicas: 1

# These variables are build-specific and should be passed via the --set parameter.
nginx:
  image: 'you need to pass in a value for nginx.image to your helm chart'

  # The Kubernetes resources for the nginx container.
  # These values are optimised for development environments.
  resources:
    requests:
      cpu: 10m
      memory: 10M
  
  # Set of values to enable and use http basic authentication
  #Â It is implemented only for very basic protection (like web crawlers)
  basicauth:
    enabled: true

    # Define username and password
    credentials:
      username: silta
      password: demo

    # Trust X-Forwarded-For from these hosts for getting external IP 
    realipfrom: 10.0.0.0/8

    # Add IP addresses that should be excluded from basicauth
    noauthips:
      - 10.0.0.0/8 # GKE internal IPs

# Configuration for everything that runs in php containers.
php:
  # The docker image to be used. This is typically passed by your CI system using the --set parameter.
  image: 'you need to pass in a value for drupal.image to your helm chart'

  # The Kubernetes resources for the php containers.
  # These values are optimised for development environments.
  resources:
    requests:
      cpu: 100m
      memory: 128M

  # Cron tasks, each of which will be run into a dedicated temporary pod.
  # When overriding this value, make sure to include the `drush cron` command.
  cron:
    - schedule: '0 * * * *'
      command: |
        if drush check-bootstrap; then
          drush cron
        fi

  # Post-installation hook.
  # This is run every time a new environment is created.
  postinstall:
    command: |
      TIME_WAITING=0
      until mysqladmin status --connect_timeout=2 -u $DB_USER -p$DB_PASS -h $DB_HOST --silent; do
        echo "Waiting for database..."; sleep 5
        TIME_WAITING=$((TIME_WAITING+5))

        if [ $TIME_WAITING -gt 60 ]; then
          echo "Database connection timeout"
          exit 1
        fi
      done

      if [ -f reference-data/db.sql.gz ]; then

        echo "Importing reference database dump"
        cat reference-data/db.sql.gz | gunzip | drush sql-cli

        echo "Importing public files"
        tar xf reference-data/public_files.tar.gz

        drush cr
        drush updatedb -n
        if [ -f config/sync/core.extension.yml ]; then
          drush config-import -n
        fi

      elif [ -f config/sync/core.extension.yml ]; then
        echo "Installing Drupal from existing configuration"
        drush site-install -n config_installer

      else
        echo "No configuration found, installing a plain drupal site"
        drush site-install -n standard
      fi

  # Post-upgrade hook.
  # This is run every time a new environment is upgraded.
  postupgrade:
    command: |
      drush updatedb -n
      if [ -f config/sync/core.extension.yml ]; then
        drush config-import -n
      fi

  # Pass additional environment variables to all php containers as key-value pairs.
  env: {}

  # The hashsalt can be provided if you need to import an existing database and preserve the ability for
  # users to log in. If not provided, a random value will be used.
  hashsalt: "template-hash-salt"

  # Custom php settings.
  php_ini:
    loglevel: warn # Possible Values: alert, error, warning, notice, debug
    upload_max_filesize: 60M
    post_max_size: 60M


# Configuration for everything that runs in shell container.
shell:
  enabled: true
  # The docker image to be used. This is typically passed by your CI system using the --set parameter.
  image: 'you need to pass in a value for shell.image to your helm chart'
  # Values for the SSH gitAuth.
  gitAuth:
    # Project's git repository URL
    repositoryUrl: 'you need to pass in a value for repositoryUrl to your helm chart'
    apiToken: 'you need to pass in a value for shell.gitAuth.apiToken to your helm chart'

# Configure the volume used for Drupal public files.
publicFiles:
  storage: 1Gi
  storageClassName: nfs

# Configure an optional volume used for Drupal private files.
privateFiles:
  enabled: false
  storage: 1G
  storageClassName: nfs

# Configure reference data that will be used when creating new environments.
referenceData:
  enabled: true
  
  # The name of the environment from which reference data will be copied.
  referenceEnvironment: 'master'

  schedule: '0 3 * * *'
  command: |
    if drush check-bootstrap; then

      if [ -d vendor/machbarmacher/gdpr-dump ] && [ -f gdpr.json ]; then

        # NFS doesn't support replacing files, so we delete them instead.
        rm -f reference-data/*

        # Export database dump.
        drush sql-dump --gzip --result-file ../reference-data/db.sql

        # Export public files.
        tar cz --exclude=css --exclude=js --exclude=styles -f reference-data/public_files.tar.gz web/sites/default/files/
      else
        echo "Reference dumps are only enabled with proper sanitization. Make sure machbarmacher/gdpr-dump is installed and gdpr.json is present in the project root."
      fi
    else
      echo "Drupal is not installed, skipping reference database dump."
    fi

  storage: 1G
  storageClassName: nfs

# Override the default values of the MariaDB subchart.
# These settings are optimised for development environments.
mariadb:
  enabled: true
  replication:
    enabled: false
  db:
    name: drupal
    user: drupal
  master:
    persistence:
      size: 1G

elasticsearch:
  enabled: false
  #Choose versions in https://www.docker.elastic.co/ from "Elasticsearch" list
  version: 6.5.0
  heapSize: 256m
  persistence:
    size: 512Mi
    storageClassName: nfs
  resources:
    requests:
      cpu: 25m
      memory: 512Mi

memcached:
  enabled: false
  maxItemMemory: 128
