
# Main domain of the cluster.
# If using ambassador, subdomains of this domain will be created automatically for each environment.
clusterDomain: "silta.wdr.io"

# An optional human-readable label for the environment, defaults to the release name.
# We typically pass the branch name when we build dedicated environments per branch.
# This name is mainly used to create nice subdomains for each environment.
environmentName: ""

# Configure image pull secrets for the containers. This is not needed on GKE.
# See https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# The app label added to our Kubernetes resources.
app: drupal

# How many instances of the Drupal pod should be in our Kubernetes deployment.
# A single pod (the default value) is good for development environments to minimise resource usage.
# Multiple pods make sense for high availability.
replicas: 1

# Enable autoscaling using HorizontalPodAutoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        targetAverageUtilization: 80

# Domain names that will be mapped to this deployment.
# Example of exposing 2 additional domains for this deployment, each with its own certificate
# Note that the key is only used for documentation purposes.
# exposeDomains:
#   production:
#     hostname: example.com
#   www:
#     hostname: www.example.com
exposeDomains: {}

# These variables are build-specific and should be passed via the --set parameter.
nginx:
  image: 'you need to pass in a value for nginx.image to your helm chart'

  # The Kubernetes resources for the nginx container.
  # These values are optimised for development environments.
  resources:
    requests:
      cpu: 5m
      memory: 10M
  
  # Set of values to enable and use http basic authentication
  #Â It is implemented only for very basic protection (like web crawlers)
  basicauth:
    enabled: true

    # Define username and password
    credentials:
      username: silta
      password: demo

  # Trust X-Forwarded-For from these hosts for getting external IP 
  realipfrom: 10.0.0.0/8

  # Define the internal network access.
  # These are used below to allow internal access to certain files
  # from trusted locations while not allowing access from the public internet.
  # These addreses are also excluded from basicauth.
  # Note that the key is only used for documentation purposes.
  noauthips:
    gke-internal: 10.0.0.0/8

  # Robots txt file blocked by default
  robotsTxt:
    allow: false

# Configuration for everything that runs in php containers.
php:
  # The docker image to be used. This is typically passed by your CI system using the --set parameter.
  image: 'you need to pass in a value for drupal.image to your helm chart'

  # The Kubernetes resources for the php containers.
  # These values are optimised for development environments.
  resources:
    requests:
      cpu: 50m
      memory: 128M

  # Cron tasks, each of which will be run into a dedicated temporary pod.
  # When overriding this value, make sure to include the `drush cron` command.
  cron:
    drupal:
      # ~ gets replaced with a random digit between 0 and 9 to prevent having all cron jobs at once.
      schedule: '~ * * * *'
      command: |
        if [[ "$(drush status --fields=bootstrap)" = *'Successful'* ]] ; then
          drush cron;
        fi

  # Post-installation hook.
  # This is run every time a new environment is created.
  postinstall:
    command: |
      if [ -f reference-data/db.sql.gz ]; then

        echo "Importing reference database dump"
        cat reference-data/db.sql.gz | gunzip | drush sql-cli

        echo "Importing public files"
        tar xf reference-data/public_files.tar.gz

        drush cr
        drush updatedb -y
        if [ -f $DRUPAL_CONFIG_PATH/core.extension.yml ]; then
          drush config-import -y
        fi
      else
        printf "\e[33mNo reference data found, please install Drupal or import a database dump. See release information for instructions.\e[0m\n"
      fi
    resources:
      requests:
        cpu: 500m
        memory: 256M

  # Post-upgrade hook.
  # This is run every time a new environment is upgraded.
  postupgrade:
    command: |
      if [[ "$(drush status --fields=bootstrap)" = *'Successful'* ]] ; then
        drush updatedb -y
        if [ -f $DRUPAL_CONFIG_PATH/core.extension.yml ]; then
          drush config-import -y
        fi
      fi

  # Pass additional environment variables to all php containers as key-value pairs.
  env: {}

  # The hashsalt can be provided if you need to import an existing database and preserve the ability for
  # users to log in. If not provided, a random value will be used.
  hashsalt: "template-hash-salt"

  # Set whether Drupal errors are displayed.
  # This is a useful override for development environments.
  errorLevel: "verbose"

  # Custom php settings.
  php_ini:
    loglevel: notice # Possible Values: alert, error, warning, notice, debug
    upload_max_filesize: 60M
    post_max_size: 60M

  # Define the location of the Drupal config files relative to the composer root.
  # This variable is exposed as $DRUPAL_CONFIG_PATH in the container.
  drupalConfigPath: "config/sync"


# Configuration for everything that runs in shell container.
shell:
  enabled: true

  # Persistent storage for SSH fingerprint keys
  storage: 1M

  # The docker image to be used. This is typically passed by your CI system using the --set parameter.
  image: 'you need to pass in a value for shell.image to your helm chart'
  # Values for the SSH gitAuth.
  gitAuth:
    # Project's git repository URL
    repositoryUrl: 'you need to pass in a value for repositoryUrl to your helm chart'
    apiToken: 'you need to pass in a value for shell.gitAuth.apiToken to your helm chart'

# Configure the dynamically mounted volumes
mounts:
  public-files:
    enabled: true
    storage: 1G
    mountPath: /app/web/sites/default/files
    storageClassName: silta-shared
    csiDriverName: csi-rclone
  private-files:
    enabled: false
    storage: 1G
    mountPath: /app/private
    storageClassName: silta-shared
    csiDriverName: csi-rclone

# Configure reference data that will be used when creating new environments.
referenceData:
  enabled: true

  # The name of the environment from which reference data will be copied.
  referenceEnvironment: 'master'

  # When to automatically update the reference data.
  schedule: '0 3 * * *'

  # Update the reference data after deployments on the reference environment.
  updateAfterDeployment: true

  # The commands that is executed to export reference data.
  command: |
    if [[ "$(drush status --fields=bootstrap)" = *'Successful'* ]] ; then
      # NFS doesn't support replacing files, so we delete them instead.
      rm -f reference-data/*

      # Export database dump.
      drush sql-dump --gzip --result-file ../reference-data/db.sql

      # Export public files.
      tar cz --exclude=css --exclude=js --exclude=styles -f reference-data/public_files.tar.gz web/sites/default/files/
    else
      echo "Drupal is not installed, skipping reference database dump."
    fi

  storage: 1G
  storageClassName: silta-shared
  csiDriverName: csi-rclone

  # Skips mounting the volume outside of the reference environment, only used programmatically.
  skipMount: false

# Parameters for sanitizing reference data with gdpr-dump.
# Uses formatters from https://packagist.org/packages/fzaninotto/faker.
gdprDump:
  users_field_data:
    name:
      formatter: name
    pass:
      formatter: password
    mail:
      formatter: email
    init:
      formatter: clear

backup:
  # Whether backups should be taken for the current environment.
  enabled: false

  # Cron schedule when backups should be taken, this is expected to take place daily.
  # ~ gets replaced with a random digit between 0 and 9 to prevent having all cron jobs at once.
  schedule: '~ 2 * * *'

  # How many daily backups to preserve.
  retention: 7

  # If specified, replace environment content with the given backup.
  restoreId: null

  # Specify how to restore a backup.
  restoreCommand: |
    # figure out how to restore

  storage: 10G
  storageClassName: silta-shared
  csiDriverName: csi-rclone

  # These tables will have their content ignored from the backups.
  ignoreTableContent: '(cache|cache_.*)'

# Override the default values of the MariaDB subchart.
# These settings are optimised for development environments.
mariadb:
  enabled: true
  replication:
    enabled: false
  db:
    name: drupal
    user: drupal
  master:
    persistence:
      size: 1G
    resources:
      requests:
        cpu: 50m
        memory: 128M

varnish:
  enabled: false
  resources:
    requests:
      cpu: 50m
      memory: 32Mi
  # https://varnish-cache.org/docs/trunk/users-guide/storage-backends.html
  storageBackend: 'file,/var/lib/varnish/varnish_storage.bin,512M'
  # Inject custom code into vcl_recv subroutine
  vcl_recv_extra: |

elasticsearch:
  enabled: false
  # Choose versions in https://www.docker.elastic.co/ from "Elasticsearch" list
  version: 6.5.0
  heapSize: 256m
  xpack:
    enabled: false
  persistence:
    size: 512Mi
  resources:
    requests:
      cpu: 25m
      memory: 512Mi

# Memcache service overrides
# see: https://github.com/helm/charts/blob/master/stable/memcached/values.yaml
memcached:
  enabled: false
  replicaCount: 1
  pdbMinAvailable: 1
  memcached:
    maxItemMemory: 128

# Configure ambassador for routing inbound traffic. We typically enable ambassador on development 
# environments, but disable it and instead use a dedicated ingress resource on production; some 
# providers have limits on the number of dedicated ingress resources available in a cluster. 
ambassador:
  enabled: true
  # Optional configuration arguments for ambassador. 
  config:
    prefix: /
    timeout_ms: 30000
    use_websocket: true

# TODO: Add codecentric repo for mailhog. https://github.com/helm/helm/issues/6005
mailhog:
  enabled: false
  resources:
    requests:
      cpu: 5m
      memory: 10M

# SMTP configuration passed to containers as environment variables (SMTP_ADDRESS, SMTP_PORT, ..)
smtp:
  enabled: false
  # How to Setup SparkPost as your SMTP Relay: https://www.sparkpost.com/blog/setup-sparkpost-smtp-relay/
  # address: smtp.example.com:25
  # tls: false
  # starttls: false
  # username: ""
  # password: ""
