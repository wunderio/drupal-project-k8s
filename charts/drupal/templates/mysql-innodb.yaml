{{- if .Values.mysql.enabled }}
{{- if not ( .Capabilities.APIVersions.Has "mysql.oracle.com/v2" ) }}
{{- fail "API mysql.oracle.com/v2 unavailable, ask cluster administrator to enable Mysql InnoDBCluster support in Silta cluster first!" }}
{{- end }}
{{- if or (gt (.Values.mysql.replicas | toString | atoi) 9) (lt (.Values.mysql.replicas | toString | atoi) 1) }}
{{- fail "Invalid mysql.replicas value, must be between 1 and 9" }}
{{- end }}
{{- if or (gt (.Values.mysql.routerReplicas | toString | atoi) 9) (lt (.Values.mysql.routerReplicas | toString | atoi) 1) }}
{{- fail "Invalid mysql.routerReplicas value, must be between 1 and 9" }}
{{- end }}
apiVersion: mysql.oracle.com/v2
kind: InnoDBCluster
metadata:
  # ERR1
  # * InnoDBCluster.mysql.oracle.com "feature-test-cluster-mysql-operator-mysql" is invalid: 
  #   metadata.name: Too long: may not be longer than 40
  # ERR2
  # Handler 'on_innodbcluster_create' failed temporarily: Error in InnoDBCluster spec: 
  # Cluster name feature-test-cluster-mysql-operator-db is too long. Must be < 28
  name: {{ include "silta.mysql-cluster.name" . }}
spec:
  # TODO: find available versions, pin to the latest stable
  # version: 
  instances: {{ .Values.mysql.replicas }}
  router:
    instances: {{ .Values.mysql.routerReplicas }}
    podAnnotations:
      test333: "router-annotation"
    podLabels:
      test444: "router-label"
    # podSpec:
  secretName: {{ .Release.Name }}-mysql
  tlsUseSelfSigned: true

  podAnnotations:
    test111: "pod-annotation"

  podLabels:
    test222: "pod-label"

  # See: https://dev.mysql.com/doc/mysql-operator/en/mysql-operator-properties.html#mysql-operator-title-spec-innodbcluster

  # datadirVolumeClaimTemplate:
  #   accessModes: [ "ReadWriteOnce" ]
  #   resources:
  #     requests:
  #       storage: 300Gi

  # podSpec:
  #   nodeSelector:
  #     failure-domain.beta.kubernetes.io/zone: US-ASHBURN-AD-1
  #   containers:
  #   - name: mysql
  #     resources:
  #       requests:
  #         memory: "2048Mi"
  #         cpu: "1800m"
  #       limits:
  #         memory: "8192Mi"
  #         cpu: "3600m"
  
  {{- if .Values.mysql.logs }}
  logs:
    {{ .Values.mysql.logs | toYaml | nindent 4 }}
  {{- end }}      
  {{- if .Values.mysql.mycnf }}
  mycnf: 
    {{ .Values.mysql.mycnf | toYaml | nindent 4 }}
  {{- end }}

---

apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-mysql
type: Opaque
data:
  rootUser: {{ print "root" | b64enc | quote }}
  rootPassword: {{ .Values.mysql.secrets.root | b64enc | quote }}
  rootHost: {{ print "%" | b64enc | quote }}

{{- end }}