{{- if or (ne .Values.php.preupgrade.command "") .Values.php.preupgrade.backup }}
{{- $claimName := printf "%s-backup" .Release.Name }}
{{- if and ( eq $.Values.backup.storageClassName "silta-shared" ) ( eq ( include "silta-cluster.rclone.has-provisioner" $ ) "true" ) }}
{{- $claimName = printf "%s-backup2" .Release.Name }}
{{- end }}
{{- if lookup "v1" "PersistentVolumeClaim" .Release.Namespace $claimName }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-pre-release"
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  completions: 1
  backoffLimit: 0
  template:
    metadata:
      labels:
        {{- include "drupal.release_labels" . | nindent 8 }}
    spec:
      restartPolicy: Never
      enableServiceLinks: false
      containers:
      - name: pre-release
        {{- include "drupal.php-container" . | nindent 8 }}
        command: ["/bin/bash", "-c"]
        args:
        - |
            {{- include "drupal.pre-release-command" . | nindent 12 }}
        volumeMounts:
          {{- include "drupal.volumeMounts" . | nindent 10 }}
          {{- if .Values.php.preupgrade.backup }}
          - name: {{ .Release.Name }}-backup
            mountPath: /backups
          {{- end }}
        resources:
          {{- .Values.php.preupgrade.resources | toYaml | nindent 10 }}
      nodeSelector:
        {{- .Values.php.preupgrade.nodeSelector | toYaml | nindent 8 }}
      tolerations:
        {{- include "drupal.tolerations" .Values.php.preupgrade.nodeSelector | nindent 8 }}
      serviceAccountName: {{ include "drupal.serviceAccountName" . }}
      volumes:
        {{- include "drupal.volumes" . | nindent 8 }}
        {{- if .Values.php.preupgrade.backup }}
        - name: {{ .Release.Name }}-backup
          persistentVolumeClaim:
            {{- if and ( eq $.Values.backup.storageClassName "silta-shared" ) ( eq ( include "silta-cluster.rclone.has-provisioner" $ ) "true" ) }}
            claimName: {{ .Release.Name }}-backup2
            {{- else }}
            claimName: {{ .Release.Name }}-backup
            {{- end }}
        {{- end }}
{{- end }}
{{- end }}
