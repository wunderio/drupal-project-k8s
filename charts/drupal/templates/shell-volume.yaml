{{- if .Values.shell.enabled }}
{{- $releaseNameTrimmed := substr 0 (int (sub 54 (len "ssh-keys"))) $.Release.Name }}
# TODO: restore when fs mount umask is fixed
{{- if (eq .Values.shell.mount.storageClassName "silta-shared") }}
# {- if and (eq .Values.shell.mount.storageClassName "silta-shared") ( eq ($.Values.cluster.siltaSharedStorageVersion | int)  1) }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-{{ .Release.Namespace | sha256sum | trunc 7 }}-ssh-keys
  labels:
    name: {{ $releaseNameTrimmed }}-{{ .Release.Namespace | sha256sum | trunc 7 }}-ssh-keys
    {{- include "drupal.release_labels" . | nindent 4 }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.shell.mount.storageClassName }}
  capacity:
    storage: {{ .Values.shell.mount.storage }}
  {{- if .Values.shell.mount.csiDriverName }}
  csi:
    driver: {{ .Values.shell.mount.csiDriverName }}
    volumeHandle: {{ .Release.Name }}-{{ .Release.Namespace | sha256sum | trunc 7 }}-ssh-keys
    volumeAttributes:
      remotePathSuffix: /{{ .Release.Namespace }}/{{ .Values.environmentName }}/ssh-keys
      umask: "077"
  {{- end }}
---
{{- end }}

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  # TODO: restore when fs mount umask is fixed
  # {- if and (eq .Values.shell.mount.storageClassName "silta-shared") ( eq ($.Values.cluster.siltaSharedStorageVersion | int) 2) }}
  # name: {{ .Release.Name }}-v2-ssh-keys
  # {- else }}
  name: {{ .Release.Name }}-ssh-keys
  # {- end }}
  labels:
    {{- include "drupal.release_labels" . | nindent 4 }}
  annotations:
    storage.silta/storage-path: {{ .Values.environmentName | default .Release.Name }}/ssh-keys    
spec:
  accessModes:
    - ReadWriteMany
  # TODO: restore when fs mount umask is fixed  
  # {- if and (eq .Values.shell.mount.storageClassName "silta-shared") ( eq ($.Values.cluster.siltaSharedStorageVersion | int) 2) }}
  # storageClassName: silta-shared-nfs
  # {- else }}
  storageClassName: {{ .Values.shell.mount.storageClassName }}
  # {- end }}
  resources:
    requests:
      storage: {{ .Values.shell.mount.storage }}
  # TODO: restore when fs mount umask is fixed
  {{- if (eq .Values.shell.mount.storageClassName "silta-shared") }}
  # {- if and (eq .Values.shell.mount.storageClassName "silta-shared") ( eq ($.Values.cluster.siltaSharedStorageVersion | int) 1) }}
  selector:
    matchLabels:
      name: {{ $releaseNameTrimmed }}-{{ .Release.Namespace | sha256sum | trunc 7 }}-ssh-keys
  {{- end}}
{{- end }}
